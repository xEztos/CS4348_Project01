The purpose of the project is to teach the running order of a typical operating system. It illustrates how the different registers interact with eachother in a CPU.

The project is implemented in the Java programming language using a program and child program structure where the CPU program is the main running process. This process retrieves instructions from its child memory process and performs the associated instruction. A program counter tracks the location in memory. The instruction register holds the instruction value that needs to be executed and performed. The AC, X, Y are all registers that are associated with matematical instructions. The stack pointer keeps track of the current top of the stack, with the bottom of the user stack starting at index 999 and the stack growing smaller (towards 0). The CPU process will stem a child memory process that handles all the storage of the program memory, and feeds the CPU instructions via a console link between the two.

The sample program that I implemented was based off the Hello World program that most programmers do their first program in a new language. It incorperates using the stack, printing, and loading data into memory.

My personal experience in writing the program was not optimal. A combination of starting too late, with a lot of unforseen circumstances led to an inability to successfully implement samples 3 and 4. I still am not able to discern the usage of the difference between user mode and kernel mode, and the usage of the timer. 